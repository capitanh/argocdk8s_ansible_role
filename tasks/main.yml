---
- name: Install pip packages
  pip:
    name:
      - kubernetes

- name: Transfer argocd server config values file
  template:
    src: values.yml
    dest: "/tmp/argocd_values.yml"
    mode: 0644

- name: Install argocd helm chart
  kubernetes.core.helm:
    release_name: "{{argocd_app_name}}"
    chart_ref: argo-cd
    chart_repo_url: https://argoproj.github.io/argo-helm
    release_namespace: "{{argocd_namespace}}"
    create_namespace: true
    wait: yes
    values_files:
      - /tmp/argocd_values.yml
  become_user: "{{admin_user}}"

###################################################################################
# ArgoCD Auto Updater
- name: Download argocd auto updater manifest
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/argoproj-labs/argocd-image-updater/stable/manifests/install.yaml
    dest: /tmp/argocd-autoupdater.yaml
    mode: '0664'
    validate_certs: no

- name: Install argocd auto updater
  kubernetes.core.k8s:
    namespace: "{{argocd_namespace}}"
    state: present
    src: /tmp/argocd-autoupdater.yaml
  become_user: "{{admin_user}}"

###################################################################################
# Export config values as facts for use in playbooks

- name: Get ArgoCD service IP
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: argocd-server
    namespace: "{{argocd_namespace}}"
  become_user: "{{admin_user}}"
  register: L_ARGOCD_SERVICE_INFO

- name: Export variables
  set_fact:
    ARGOCD_SERVICE_INFO: "{{L_ARGOCD_SERVICE_INFO}}"
    ARGOCD_ADMIN_PASSWROD: "{{argocd_admin_password}}"
