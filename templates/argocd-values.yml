# Custom config values, see https://github.com/argoproj/argo-helm/blob/master/charts/argo-cd/values.yaml for reference
global:
  domain: {{argocd_host}}
configs:
  params:
    server.insecure: true
  cm:
    statusbadge.enabled: "true"
    timeout.reconciliation: 10s
#prometheus-node-exporter:
#  prometheus:
#    monitor:
#      enabled: true
server:
  ingress:
    enabled: true
    ingressClassName: "public"
  certificateSecret:
    key: /usr/share/ca-certificates/localhost/localhost.direct.key
    crt: /usr/share/ca-certificates/localhost/localhost.direct.crt
  extensions:
    enabled: true
    image:
      repository: "quay.io/argoprojlabs/argocd-extension-installer"
      tag: "v0.0.1"
    extensionList:
      - name: rollout-extension
        env:
          - name: EXTENSION_URL
            value: https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.4/extension.tar
    containerSecurityContext:
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
        - ALL
#  metrics:
#    # -- Deploy metrics service
#    enabled: true
#    service:
#      # -- Metrics service annotations
#      annotations: {}
#      # -- Metrics service labels
#      labels: {}
#      # -- Metrics service port
#      servicePort: 8083
#      # -- Metrics service port name
#      portName: http-metrics
#    serviceMonitor:
#      # -- Enable a prometheus ServiceMonitor
#      enabled: true
#      # -- Prometheus ServiceMonitor interval
#      interval: 30s
#      # -- Prometheus [RelabelConfigs] to apply to samples before scraping
#      relabelings: []
#      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
#      metricRelabelings: []
#      # -- Prometheus ServiceMonitor selector
#      selector: {}
#      # -- Prometheus ServiceMonitor scheme
#      scheme: ""
#      # -- Prometheus ServiceMonitor tlsConfig
#      tlsConfig: {}
#      # -- Prometheus ServiceMonitor namespace
#      namespace: ""  # monitoring
#      # -- Prometheus ServiceMonitor labels
#      additionalLabels: {}
#      # -- Prometheus ServiceMonitor annotations
#      annotations: {}
